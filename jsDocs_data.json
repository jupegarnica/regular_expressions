[
  {
    "kind": "variable",
    "name": "email",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/email.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@description: Allow IP as domain name: hello@154.145.68.12 does allow literal addresses &quot;hello, how are you?&quot;@world.com allows numeric domain names after the last &quot;.&quot; minimum 2 letters"
        },
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "email_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/email.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "email_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/email.ts",
      "line": 31,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "colorHex",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@description: Should match any valid css hex color. (#ffcc00,  #abc, or #ffcc0033)"
        },
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "#((([0-9a-fA-F]{1}){3,4})|(([0-9a-fA-F]{2}){3,4}))",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "colorHex_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "colorHex_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "colorRgb",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 35,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@description: Should match any valid css rgb o rgba color. (rgb(255,255,255), rgba(255,255,255,0.5))"
        },
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "rgba?\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})(\\s*,\\s*0?\\.[0-9])?\\s*\\)",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "colorRgb_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 38,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "colorRgb_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 46,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "colorHsl",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 59,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@description: Should match any valid  css hsl color. (hsl(0,100%,50%), hsla(0,100%,50%,0.5))"
        },
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "hsla?\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})%\\s*,\\s*([0-9]{1,3}%)(\\s*,\\s*0?\\.[0-9])?\\s*\\)",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "colorHsl_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 61,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "colorHsl_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 69,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "color",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 82,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@description: Should match any valid css color."
        },
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "RegExp",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "color_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 86,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "color_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/color.ts",
      "line": 91,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "reservedWords",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match a js reserved word",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#keywords"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "(\\b(?:break|case|catch|class|const|continue|debugger|default|delete|do|else|export|extends|finally|for|function|if|import|in|instanceof|new|return|super|switch|this|throw|try|typeof|var|void|while|with|yield|implements|interface|let|package|private|protected|public|static|yield|enum|await|abstract|boolean|byte|char|double|final|float|goto|int|long|native|short|synchronized|throws|transient|volatile|null|true|false)\\b)",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "reservedWords_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "reservedWords_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 82,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "identifierNames",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 92,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match a valid js variable/function/class name",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@see https://developer.mozilla.org/en-US/docs/Glossary/Identifier"
        },
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "RegExp",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "identifierNames_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 95,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "identifierNames_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 108,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionAnonymous",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 126,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match a js anonymous classic function definition",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "function(?<noName>\\s*)\\(.*\\)\\s*\\{(.*)\\}",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionAnonymous_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 127,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionAnonymous_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 134,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionClassic",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 145,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match a js classic function definition",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "RegExp",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionClassic_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 152,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionClassic_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 160,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionArrow",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 176,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match a js arrow function definition",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "([a-zA-Z0-9-$]+)|(\\(.*\\))\\s*=>\\s*(.*)",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionArrow_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 177,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionArrow_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 185,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionAsync",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 196,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match a js async function definition",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "RegExp",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionAsync_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 200,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionAsync_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 210,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionGenerator",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 219,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match a js generator function definition",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "RegExp",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionGenerator_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 226,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionGenerator_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 231,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionAsyncGenerator",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 245,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match a js async generator function. Only matches the syntax of `async function*` not any other way of creating an async generator or iterator.",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "RegExp",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionAsyncGenerator_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 249,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "functionAsyncGenerator_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 255,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "classDefinition",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 271,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match a js class definition",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "RegExp",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "classDefinition_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 278,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "classDefinition_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 291,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "globalScope",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 579,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any global variable",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "RegExp",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "globalScope_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 583,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "globalScope_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 590,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "import",
    "name": "red",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/js_eval.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "https://deno.land/std@0.129.0/fmt/colors.ts",
      "imported": "red"
    }
  },
  {
    "kind": "variable",
    "name": "url",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any url with or without http/s protocol and with or without port",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "((https?:)?\\/\\/)?(www\\.)?[-a-zA-Z0-9:%._\\+~#=]{2,256}\\.[a-z]{2,6}(:[0-9]{1,5})?(\\/[-a-zA-Z0-9:%_\\+.~#?&//=]*)?",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "url_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "url_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 40,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "urlWithPort",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 55,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any url with or without http/s protocols and port",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see https://es.wikipedia.org/wiki/Anexo:Puertos_de_red"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "((https?:)?\\/\\/)?(www\\.)?[-a-zA-Z0-9:%._\\+~#=]{2,256}\\.[a-z]{2,6}(:([0-9]{1,5}))(\\/[-a-zA-Z0-9:%_\\+.~#?&//=]*)?",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "urlWithPort_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 58,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "urlWithPort_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 68,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "urlWithProtocol",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 79,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any url with http/s protocols and with or without port",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "(https?:\\/\\/)(www\\.)?[-a-zA-Z0-9:%._\\+~#=]{2,256}\\.[a-z]{2,6}(:([0-9]{1,5}))(\\/[-a-zA-Z0-9:%_\\+.~#?&//=]*)?",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "urlWithProtocol_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 82,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "urlWithProtocol_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 90,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "hostname",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 102,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any url hostname (no protocol, no port, no path)",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "[-a-zA-Z0-9:%._\\+~#=]{2,256}\\.[a-z]{2,6}",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "hostname_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 104,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "hostname_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 110,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "uri",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 132,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any uri with any protocol, for example file://, http://, https://, ftp://, chrome-extension://, chrome://, etc...",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@see https://es.wikipedia.org/wiki/Esquema_de_URI"
        },
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "([\\w-.]{3,}:\\/\\/)(www\\.)?[-a-zA-Z0-9:%._\\+~#=]{2,256}\\.[a-z]{2,6}(:([0-9]{1,5}))?(\\/[-a-zA-Z0-9:%_\\+.~#?&//=]*)?",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "uri_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 135,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "uri_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 156,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv4",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 169,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any ip v4 without protocol, no any mask of subnet",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv4_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 172,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv4_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 183,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv4SubnetMask",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 198,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any subnet mask",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@see https://en.wikipedia.org/wiki/Subnetwork"
        },
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "((255\\.){3}(0|128|192|224|240|248|252|254|255))|((255\\.){2}(0|128|192|224|240|248|252|254|255)\\.0)|((255\\.)(0|128|192|224|240|248|252|254|255)\\.0\\.0)|((255\\.){1}(0|128|192|224|240|248|252|254|255)\\.0\\.0\\.0)",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv4SubnetMask_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 201,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv4SubnetMask_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 210,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv4CIDR",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 220,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any ipv4 CIDR notation (subnet)",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@see https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing"
        },
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv4CIDR_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 225,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv4CIDR_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 264,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv6",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 275,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any ip v6 without protocol",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see https://es.wikipedia.org/wiki/IPv6"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv6_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 279,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "ipv6_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 286,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "iPv4Private",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 300,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any private ip v4",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "(?:(?:10|127)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:169\\.254|192\\.168)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:172\\.(?:1[6-9]|2[0-9]|3[01]|4[0-9]|5[0-9])\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "iPv4Private_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 304,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "iPv4Private_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 311,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "uriProtocol",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 324,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any valid uri protocol",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see https://en.wikipedia.org/wiki/Uniform_Resource_Identifier"
        },
        {
          "kind": "unsupported",
          "value": "@see https://es.wikipedia.org/wiki/Esquema_de_URI"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "((aaa)|(aaas)|(about)|(acap)|(adiumxtra)|(afp)|(aim)|(apt)|(attachment)|(aw)|(beshare)|(bitcoin)|(bolo)|(callto)|(cap)|(chrome)|(chrome-extension)|(cid)|(content)|(crid)|(cvs)|(data)|(dav)|(dict)|(dns)|(ed2k)|(facetime)|(fax)|(feed)|(file)|(finger)|(fish)|(ftp)|(geo)|(gg)|(git)|(gizmoproject)|(go)|(gopher)|(gtalk)|(h323)|(hcp)|(http)|(https)|(iax)|(icap)|(im)|(imap)|(info)|(ipp)|(irc)|(irc6)|(ircs)|(iris)|(iris.beep)|(iris\\.xpc)|(iris\\.xpcs)|(iris\\.lws)|(itms)|(jar)|(keyparc)|(lastfm)|(ldap)|(ldaps)|(lightning)|(magnet)|(mailto)|(maps)|(market)|(message)|(mid)|(mms)|(modem)|(ms-help)|(msnim)|(msrp)|(msrps)|(mtqp)|(mumble)|(mupdate)|(mvn)|(news)|(nfs)|(nntp)|(notes)|(opaquelocktoken)|(palm)|(paparazzi)|(platform)|(pop)|(pres)|(prospero)|(proxy)|(psyc)|(query)|(res)|(resource)|(rmi)|(rsync)|(rtmp)|(rtsp)|(secondlife)|(service)|(sftp)|(sgn)|(shttp)|(sieve)|(sip)|(sips)|(skype)|(smb)|(sms)|(snmp)|(soap\\.beep)|(soap\\.beeps)|(soldat)|(spotify)|(ssh)|(steam)|(svn)|(tag)|(teamspeak)|(tel)|(telnet)|(tftp)|(things)|(thismessage)|(tip)|(tv)|(udp)|(unreal)|(urn)|(ut2004)|(uuid)|(vemmi)|(ventrilo)|(view-source)|(wais)|(webcal)|(ws)|(wss)|(wtai)|(wyciwyg)|(xfire)|(xmlrpc\\.beep)|(xmlrpc\\.beeps)|(xmpp)|(xri)|(ymsgr)|(z39\\.50r)|(z39\\.50s)):",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "uriProtocol_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 327,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "uriProtocol_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/uri.ts",
      "line": 365,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "number",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any valid JS number but not NaN, Infinity or -Infinity.",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "(?:[-+]?(?:0|[1-9_][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?)",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "number_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "number_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 23,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberInteger",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 38,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any number signed integer or unsigned integer.",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "(?:[-+]?(?:0|[1-9][0-9]*))",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberInteger_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 39,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberInteger_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 45,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberFloat",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 61,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any float number, signed or unsigned, but not integers or exponential.",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "([-+]?([0-9]+))?\\.([0-9])+",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberFloat_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 62,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberFloat_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 69,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberExponential",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 88,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any exponential number.",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "([-+]?([0-9]+))?(\\.([0-9]+))?[eE]([-+]?([0-9]+))",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberExponential_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 90,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberExponential_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 102,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberHex",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 119,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any number hexadecimal, signed or unsigned",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "(([+-])?0[xX][0-9a-fA-F]+)",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberHex_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 120,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberHex_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 131,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberOctal",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 147,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any number octal, signed or unsigned, but not integers or exponential.",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "([+-])?(0o?[0-7]+)",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberOctal_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 148,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberOctal_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 157,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberBinary",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 180,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any binary number, signed or unsigned, but not integers or exponential.",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "([+-])?0[bB][01]+",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberBinary_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 181,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberBinary_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 190,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "base64",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 212,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any base64 string.",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see https://en.wikipedia.org/wiki/Base64"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "[A-Za-z0-9+/]+={0,2}",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "base64_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 213,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "base64_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 219,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "romanNumeral",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 229,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any roman numeral",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see https://en.wikipedia.org/wiki/Roman_numerals"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "romanNumeral_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 231,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "romanNumeral_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 355,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberBigInt",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 380,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match any BigInt",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "[+-]?(0|[1-9][0-9]*)n",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberBigInt_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 381,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "numberBigInt_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/number.ts",
      "line": 389,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "camelCase",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match  camelCase string",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "((?![A-Z])[a-zA-Z0-9]+)+",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "camelCase_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "camelCase_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "kebabCase",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 25,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match  kebab-case string",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "((?!-)([a-z0-9]+)(-[a-z0-9])?)+",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "kebabCase_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 27,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "kebabCase_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 32,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "snakeCase",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 49,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match  snake_case string",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "((?!_)([a-z0-9]+)(_[a-z0-9])?)+",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "snakeCase_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 51,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "snakeCase_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 56,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "PascalCase",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 74,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match  PascalCase string",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "([A-Z][a-z0-9]+)+",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "PascalCase_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 76,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "PascalCase_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 81,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "constantCase",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 95,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Should match  CONSTANT_CASE string",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "([A-Z0-9]+)(_[A-Z0-9]+)?",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "constantCase_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 97,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "constantCase_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/case.ts",
      "line": 101,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "lettersButNotH",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/example.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "should match any single letter but not H.",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@author Github Copilot"
        },
        {
          "kind": "unsupported",
          "value": "@see https://www.w3.org/TR/CSS2/syndata.html#characters"
        }
      ]
    },
    "variableDef": {
      "tsType": {
        "repr": "(?![H])[a-zA-Z]",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "lettersButNotH_should_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/example.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "lettersButNotH_should_not_match",
    "location": {
      "filename": "file:///home/juan/dev/regular_expressions/src/example.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "string",
          "kind": "keyword",
          "keyword": "string"
        }
      },
      "kind": "const"
    }
  }
]
